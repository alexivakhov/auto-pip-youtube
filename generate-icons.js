// –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —ñ–∫–æ–Ω–æ–∫ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è
// –¶–µ–π —Å–∫—Ä–∏–ø—Ç —Å—Ç–≤–æ—Ä—é—î –∫—Ä–∞—Å–∏–≤—ñ SVG —ñ–∫–æ–Ω–∫–∏ –¥–ª—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è

const fs = require('fs');
const path = require('path');

// –ü–æ–∫—Ä–∞—â–µ–Ω–∏–π SVG —à–∞–±–ª–æ–Ω –¥–ª—è —ñ–∫–æ–Ω–∫–∏
const iconTemplate = (size) => `
<svg width="${size}" height="${size}" viewBox="0 0 ${size} ${size}" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#ff6b6b;stop-opacity:1" />
      <stop offset="50%" style="stop-color:#ee5a24;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#ff4757;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="tvGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#ffffff;stop-opacity:0.95" />
      <stop offset="100%" style="stop-color:#f8f9fa;stop-opacity:0.9" />
    </linearGradient>
    
    <linearGradient id="screenGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#2c3e50;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#34495e;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="pipGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#4CAF50;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#45a049;stop-opacity:1" />
    </linearGradient>
    
    <filter id="shadow" x="-50%" y="-50%" width="200%" height="200%">
      <feDropShadow dx="0" dy="2" stdDeviation="2" flood-color="#000000" flood-opacity="0.3"/>
    </filter>
  </defs>
  
  <!-- –§–æ–Ω–æ–≤–∏–π –∫—Ä—É–≥ –∑ —Ç—ñ–Ω–Ω—é -->
  <circle cx="${size/2}" cy="${size/2}" r="${size*0.45}" fill="url(#bgGradient)" filter="url(#shadow)"/>
  
  <!-- TV –∫–æ—Ä–ø—É—Å -->
  <g transform="translate(${size * 0.25}, ${size * 0.25}) scale(${size * 0.5 / 24})">
    <!-- TV –∫–æ—Ä–ø—É—Å –∑ –≥—Ä–∞–¥—ñ—î–Ω—Ç–æ–º -->
    <rect x="2" y="6" width="20" height="14" rx="3" fill="url(#tvGradient)" stroke="#e9ecef" stroke-width="0.5"/>
    
    <!-- TV –µ–∫—Ä–∞–Ω –∑ –≥—Ä–∞–¥—ñ—î–Ω—Ç–æ–º -->
    <rect x="4" y="8" width="16" height="10" fill="url(#screenGradient)" rx="1"/>
    
    <!-- TV –ø—ñ–¥—Å—Ç–∞–≤–∫–∞ -->
    <rect x="9" y="20" width="6" height="2" fill="url(#tvGradient)" stroke="#e9ecef" stroke-width="0.3"/>
    
    <!-- PiP –≤—ñ–∫–Ω–æ –∑ –≥—Ä–∞–¥—ñ—î–Ω—Ç–æ–º -->
    <rect x="6" y="10" width="6" height="4" fill="url(#pipGradient)" rx="1" opacity="0.9"/>
    <rect x="6.5" y="10.5" width="5" height="3" fill="url(#pipGradient)" rx="0.5"/>
    
    <!-- –î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–µ—Ç–∞–ª—ñ TV -->
    <circle cx="7" cy="7" r="0.8" fill="#4CAF50" opacity="0.8"/>
    <rect x="15" y="7" width="2" height="1" fill="#4CAF50" opacity="0.6" rx="0.5"/>
  </g>
  
  <!-- –¢–µ–∫—Å—Ç PiP –∑ —Ç—ñ–Ω–Ω—é -->
  <text x="${size * 0.5}" y="${size * 0.85}" 
        font-family="Arial, sans-serif" 
        font-size="${size * 0.12}" 
        font-weight="bold" 
        text-anchor="middle" 
        fill="white"
        filter="url(#shadow)">PiP</text>
  
  <!-- –î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ -->
  <circle cx="${size * 0.25}" cy="${size * 0.25}" r="${size * 0.03}" fill="white" opacity="0.3"/>
  <circle cx="${size * 0.75}" cy="${size * 0.25}" r="${size * 0.02}" fill="white" opacity="0.2"/>
  <circle cx="${size * 0.25}" cy="${size * 0.75}" r="${size * 0.02}" fill="white" opacity="0.2"/>
</svg>
`;

// –†–æ–∑–º—ñ—Ä–∏ —ñ–∫–æ–Ω–æ–∫
const iconSizes = [16, 32, 48, 128];

// –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É icons —è–∫—â–æ —ó—ó –Ω–µ–º–∞—î
const iconsDir = path.join(__dirname, 'icons');
if (!fs.existsSync(iconsDir)) {
    fs.mkdirSync(iconsDir);
}

// –ì–µ–Ω–µ—Ä—É—î–º–æ —ñ–∫–æ–Ω–∫–∏
iconSizes.forEach(size => {
    const svg = iconTemplate(size);
    const filename = path.join(iconsDir, `icon${size}.svg`);
    
    fs.writeFileSync(filename, svg);
    console.log(`–°—Ç–≤–æ—Ä–µ–Ω–æ —ñ–∫–æ–Ω–∫—É: icon${size}.svg`);
});

console.log('\n‚úÖ –í—Å—ñ —ñ–∫–æ–Ω–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
console.log('üìÅ –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–∞–ø–∫—É icons/');
console.log('\nüí° –î–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –≤ PNG –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –æ–Ω–ª–∞–π–Ω —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –∞–±–æ ImageMagick:');
console.log('   convert icon128.svg icon128.png');
console.log('   convert icon48.svg icon48.png');
console.log('   convert icon32.svg icon32.png');
console.log('   convert icon16.svg icon16.png');
