// Content Script –¥–ª—è YouTube —Å—Ç–æ—Ä—ñ–Ω–æ–∫
class YouTubePiPController {
  constructor() {
    this.videoElement = null;
    this.isPiPActive = false;
    this.observer = null;
    this.init();
  }

  init() {
    // –í—ñ–¥—Å—Ç–µ–∂—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ background script
    chrome.runtime.onMessage.addListener(this.handleMessage.bind(this));
    
    // –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞ –∑–º—ñ–Ω–∞–º–∏ DOM –¥–ª—è –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ
    this.observeVideoElement();
    
    // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É PiP –¥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É YouTube
    this.addPiPButton();
    
    // –í—ñ–¥—Å—Ç–µ–∂—É—î–º–æ –ø–æ–¥—ñ—ó PiP –≥–ª–æ–±–∞–ª—å–Ω–æ
    this.setupPiPEventListeners();
    
    console.log('YouTube PiP Controller —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
  }

  handleMessage(request, sender, sendResponse) {
    switch (request.action) {
      case 'activatePiP':
        this.activatePiP();
        sendResponse({ success: true });
        break;
        
      case 'deactivatePiP':
        this.deactivatePiP();
        sendResponse({ success: true });
        break;
    }
  }

  observeVideoElement() {
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—ñ–¥–µ–æ –µ–ª–µ–º–µ–Ω—Ç
    this.findVideoElement();
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ observer –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω DOM
    this.observer = new MutationObserver(() => {
      if (!this.videoElement || !document.contains(this.videoElement)) {
        this.findVideoElement();
      }
    });
    
    this.observer.observe(document.body, {
      childList: true,
      subtree: true
    });
  }

  findVideoElement() {
    // –®—É–∫–∞—î–º–æ –≤—ñ–¥–µ–æ –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ YouTube
    const videoSelectors = [
      'video',
      '#movie_player video',
      '.html5-video-player video',
      'ytd-player video'
    ];
    
    for (const selector of videoSelectors) {
      const video = document.querySelector(selector);
      if (video && video.readyState >= 2) { // HAVE_CURRENT_DATA
        this.videoElement = video;
        console.log('–í—ñ–¥–µ–æ –µ–ª–µ–º–µ–Ω—Ç –∑–Ω–∞–π–¥–µ–Ω–æ');
        break;
      }
    }
  }

  setupPiPEventListeners() {
    // –í—ñ–¥—Å—Ç–µ–∂—É—î–º–æ –≤–∏—Ö—ñ–¥ –∑ PiP –≥–ª–æ–±–∞–ª—å–Ω–æ
    document.addEventListener('leavepictureinpicture', () => {
      this.isPiPActive = false;
      console.log('–í–∏—Ö—ñ–¥ –∑ PiP (–≥–ª–æ–±–∞–ª—å–Ω–∏–π)');
      
      // –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ background script –ø—Ä–æ –∑–º—ñ–Ω—É —Å—Ç–∞–Ω—É
      chrome.runtime.sendMessage({
        action: 'pipStateChanged',
        isPiPActive: false
      });
    });
    
    // –í—ñ–¥—Å—Ç–µ–∂—É—î–º–æ –≤—Ö—ñ–¥ –≤ PiP –≥–ª–æ–±–∞–ª—å–Ω–æ
    document.addEventListener('enterpictureinpicture', () => {
      this.isPiPActive = true;
      console.log('–í—Ö—ñ–¥ –≤ PiP (–≥–ª–æ–±–∞–ª—å–Ω–∏–π)');
      
      // –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ background script –ø—Ä–æ –∑–º—ñ–Ω—É —Å—Ç–∞–Ω—É
      chrome.runtime.sendMessage({
        action: 'pipStateChanged',
        isPiPActive: true
      });
    });
  }

  async activatePiP() {
    if (!this.videoElement) {
      console.log('–í—ñ–¥–µ–æ –µ–ª–µ–º–µ–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      return false;
    }

    try {
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è PiP
      if (!document.pictureInPictureEnabled) {
        console.log('PiP –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è –≤ —Ü—å–æ–º—É –±—Ä–∞—É–∑–µ—Ä—ñ');
        return false;
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤—ñ–¥–µ–æ –≥–æ—Ç–æ–≤–µ –¥–ª—è PiP
      if (this.videoElement.readyState < 2) {
        console.log('–í—ñ–¥–µ–æ —â–µ –Ω–µ –≥–æ—Ç–æ–≤–µ –¥–ª—è PiP');
        return false;
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ PiP –≤–∂–µ –∞–∫—Ç–∏–≤–Ω–∏–π
      if (document.pictureInPictureElement) {
        console.log('PiP –≤–∂–µ –∞–∫—Ç–∏–≤–Ω–∏–π');
        return true;
      }

      // –ê–∫—Ç–∏–≤—É—î–º–æ PiP
      await this.videoElement.requestPictureInPicture();
      this.isPiPActive = true;
      
      console.log('PiP –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
      
      return true;
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó PiP:', error);
      return false;
    }
  }

  async deactivatePiP() {
    if (this.isPiPActive && document.pictureInPictureElement) {
      try {
        await document.exitPictureInPicture();
        this.isPiPActive = false;
        console.log('PiP –¥–µ–∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ');
        return true;
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü—ñ—ó PiP:', error);
        return false;
      }
    }
    return false;
  }

  addPiPButton() {
    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É PiP –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è
    const button = document.createElement('button');
    button.innerHTML = 'üì∫ PiP';
    button.className = 'auto-pip-button';
    button.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 9999;
      background: rgba(0, 0, 0, 0.8);
      color: white;
      border: none;
      border-radius: 8px;
      padding: 8px 16px;
      font-size: 14px;
      cursor: pointer;
      transition: all 0.3s ease;
      font-family: 'YouTube Sans', 'Roboto', sans-serif;
    `;
    
    button.addEventListener('mouseenter', () => {
      button.style.background = 'rgba(255, 0, 0, 0.8)';
    });
    
    button.addEventListener('mouseleave', () => {
      button.style.background = 'rgba(0, 0, 0, 0.8)';
    });
    
    button.addEventListener('click', async () => {
      if (this.isPiPActive) {
        await this.deactivatePiP();
        button.innerHTML = 'üì∫ PiP';
      } else {
        const success = await this.activatePiP();
        if (success) {
          button.innerHTML = '‚èπÔ∏è –ó–∞–∫—Ä–∏—Ç–∏ PiP';
        }
      }
    });
    
    // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    document.body.appendChild(button);
    
    // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É —è–∫—â–æ –≤–æ–Ω–∞ –≤–∂–µ —ñ—Å–Ω—É—î
    const existingButton = document.querySelector('.auto-pip-button');
    if (existingButton && existingButton !== button) {
      existingButton.remove();
    }
  }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
const pipController = new YouTubePiPController();
